! version = 2.0

> begin
+ request
* <get topic> == undefined => {topic=random}
- {ok}
< begin


+ play
- Do you want to play Centipede (y/n)? {topic=game}

+ write
- Do you want to open the writer (y/n)? {topic=writer}

+ (zine|magazine|mag|mags)
- Do you want to look at magazines? (y/n)? {topic=zine}

+ tell me a joke
- <call>getJoke</call>

+ what is the weather in *
- <call>getFreeWeather "<star>"</call>

+ who is the boss
- The boss is <bot boss>.

+ google *{weight=10}
- open: http://google.com/search?q=<star>

+ youtube *
- open: https://www.youtube.com/results?search_query=<star>



// Define responses to specific commands
// Tell the parser to join continuation lines with line breaks
! local concat = newline
+ help
- Here are the commands you can use:
^  g yoursearchterm
^  y yoursearchterm
^  play = centipede
^  hn = hacker news feed
^  articles = posts
^  what is the weather in ...
^  tell me a joke
^  tell me a poem

// The ^ command automatically extends the data from the previous line
+ tell me a poem
- Little Miss Muffit sat on her tuffet,
^ In a nnchalant sort of way.\n
^ With her force field around her,\n
^ The Spider, the bounder,\n
^ Is nt in the picture today

+ [*] gam* [*]
- do you want to play Centipede (y/n){topic=game}

+ [*] writer* [*]
- do you want to open the writer (y/n){topic=writer}


// Say you wanted the bot to be able to do floating-point math, but the
// decimal place in the user's message nrmally gets stripped out...
+ w * d *
- <call>floating_point_divide</call>

> object floating_point_divide javascript
setUservar(username, “origMessage”, message)
    // Retrieve the original message
 setUservar(username, “origMessage”, message)
let origMessage = await rs.getUservar(rs.currentUser(), “origMessage”);

    return origMessage;
< object
